
.TH _PRINTF 1 "October 2020" Version(0.1) "_PRINTF MAN PAGE"
.SH NAME
.PP
.B _printf - print formatted output conversion.
.PP
.SH SYNOPSIS

.PP
.b _printf - FORMAT [ARGUMENT]...
.PP
.b _printf - Options.
.PP
#include "holberton.h"
.PP
int _printf(const char *format, ...);
.PP
int structures(const char *format, int *i, va_list arg);
.PP
int print_numbers(va_list n);
.PP
int print_unsigned(va_list n);
.PP
int print_octal(va_list o);
.PP
int print_HEX(va_list X);
.PP
int print_hex(va_list x);
.PP
int print_string(va_list a);
.PP
int print_char(va_list c);
.PP
int _putchar(char c);
.PP

.SH DESCRIPTION
.PP
The _printf () function is used to print the "characters, strings, floats, integers, decimals, octals, and binaries" on the output screen. The _printf () family functions produce results according to a format as described below.
.PP
Prints data and arguments according to the stipulated format and are executed according to the established options or Printf
There are different types of flags that are used when you want to print with print\
f, they are used when making an assignment, as we will see below:
.PP
 %d , %i - print a number "%d" referring to a decimal number or "%i" to an integer,\
 both are integer type assignments.
.PP
 %c - Print characters.
.PP
 %s - Print the string.
.PP
 %u - Print a unsigned integrer.
.PP
 %r - Print a reversed string.
.PP
 %o - Print a octal number.
.PP
 %b - Print a binary numer.
.PP
.SH RETURN VALUE
.PP
Upon successful return, these functions return the number of characters printed (e\
xcluding
the null byte used to end output to strings).
.PP
.SH FORMAT
The format string is a character string, beginning and ending in its initial shift state,
if any. The format string is composed of zero or more directives: ordinary characters 
(not %), which are copied unchanged to the output stream; and conversion specifications,
each of which results in fetching zero or more subsequent arguments.
.PP
.SH EXAMPLES
.PP
 With main.c we can test our functions:
.PP
#include "holberton.h"
.PP
_printf("char: %c\n", 'H');
.PP
Output: char: H
.PP
_printf("string: %s\n", "Hello!");
.PP
Output: string: Hello!
.PP
_printf("integer: %i\n", 101);
.PP
Output: integer: 101
.PP
_printf("integrer %i\n", 88);
.PP
Output: integrer 88
.PP
_printf("decimal: %d\n", 1010101);
.PP
Output: decimal: 1010101
.PP
_printf("octal %o\n", 92);
.PP
Output: octal 134
.PP
_printf("Percent:[%%]\n");
.PP
Output: Percent:[%]
.PP
.SH BUGS
Unknown
.PP

.SH AUTHORS
Written by:
.PP
-Valeria Trujillo
.PP
-Camilo Garz√≥n

.Th
